// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notatki_Studenckie_v3;

#nullable disable

namespace Notatki_Studenckie_v3.Migrations
{
    [DbContext(typeof(NotesContext))]
    [Migration("20240513183856_lol")]
    partial class lol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Notatki_Studenckie_v3.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryNameDb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryNameDb = "[Kategoria 1]"
                        });
                });

            modelBuilder.Entity("Notatki_Studenckie_v3.QuickNote", b =>
                {
                    b.Property<int>("QuickNoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuickNoteId"));

                    b.Property<string>("QuickTextDb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuickNoteId");

                    b.ToTable("QuickNotes");

                    b.HasData(
                        new
                        {
                            QuickNoteId = 1,
                            QuickTextDb = "[przykładowa notatka]"
                        });
                });

            modelBuilder.Entity("Notatki_Studenckie_v3.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopicId"));

                    b.Property<int>("CategoryRefId")
                        .HasColumnType("int");

                    b.Property<string>("TopicTextDb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicId");

                    b.HasIndex("CategoryRefId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            TopicId = 1,
                            CategoryRefId = 1,
                            TopicTextDb = "Losowa notatka, która zawiera jakieś informacje"
                        });
                });

            modelBuilder.Entity("Notatki_Studenckie_v3.Topic", b =>
                {
                    b.HasOne("Notatki_Studenckie_v3.Category", "Category")
                        .WithMany("Topic")
                        .HasForeignKey("CategoryRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Notatki_Studenckie_v3.Category", b =>
                {
                    b.Navigation("Topic");
                });
#pragma warning restore 612, 618
        }
    }
}
