// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notatki_Studenckie_v3;

#nullable disable

namespace Notatki_Studenckie_v3.Migrations
{
    [DbContext(typeof(NotesContext))]
    [Migration("20240513132018_InitialD")]
    partial class InitialD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Notatki_Studenckie_v3.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryNameDB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryNameDB = "[Kategoria 1]"
                        });
                });

            modelBuilder.Entity("Notatki_Studenckie_v3.QuickNote", b =>
                {
                    b.Property<int>("QuickNoteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuickNoteID"));

                    b.Property<string>("QuickTextDB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuickNoteID");

                    b.ToTable("QuickNotes");

                    b.HasData(
                        new
                        {
                            QuickNoteID = 1,
                            QuickTextDB = "[przykładowa notatka]"
                        });
                });

            modelBuilder.Entity("Notatki_Studenckie_v3.Topic", b =>
                {
                    b.Property<int>("TopicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TopicID"));

                    b.Property<int>("CategoryRefID")
                        .HasColumnType("int");

                    b.Property<string>("TopicTextDB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TopicID");

                    b.HasIndex("CategoryRefID");

                    b.ToTable("Topic");

                    b.HasData(
                        new
                        {
                            TopicID = 1,
                            CategoryRefID = 1,
                            TopicTextDB = "Losowa notatka, która zawiera jakieś informacje"
                        });
                });

            modelBuilder.Entity("Notatki_Studenckie_v3.Topic", b =>
                {
                    b.HasOne("Notatki_Studenckie_v3.Category", "Category")
                        .WithMany("Topic")
                        .HasForeignKey("CategoryRefID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Notatki_Studenckie_v3.Category", b =>
                {
                    b.Navigation("Topic");
                });
#pragma warning restore 612, 618
        }
    }
}
